<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1739,6253" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="62">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Process for going through company files for invoices. The need is to automate invoice handling.&#xA;&#xA;1. read only pdf files from a named folder&#xA;2. extract needed data from the pdf files &#xA;3. save the extracted data to csv files" DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="996,6188" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="PDFfiles" />
      <Variable x:TypeArguments="x:String" Name="DirectoryPath" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT_InvoiceRows" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT_HeaderResult" />
      <Variable x:TypeArguments="x:String" Name="InvoiceName" />
      <Variable x:TypeArguments="x:Int32" Name="InvoicerowCounter" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Creating initial aspects; directory path, DataTables, PDFfile list" sap:VirtualizedContainerService.HintSize="934,515" sap2010:WorkflowViewState.IdRef="Sequence_31">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign Path to correct directory" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[DirectoryPath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">InvoicesPDF</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign PDF files as PDFfiles variable" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[PDFfiles]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(DirectoryPath, "*.pdf")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:BuildDataTable DataTable="[DT_HeaderResult]" DisplayName="Build Data Table for InvoiceHeader" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;InvoiceNumber&quot; msdata:Caption=&quot;&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;CompanyName&quot; msdata:Caption=&quot;&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;45&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;ReferenceNumber&quot; msdata:Caption=&quot;&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;45&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;InvoiceDate&quot; msdata:Caption=&quot;&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;45&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;DueDate&quot; msdata:Caption=&quot;&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;45&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;CompanyCode&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;BankAccountNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;AmountExclVat&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;VATAmount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TotalAmount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
      <ui:BuildDataTable DataTable="[DT_InvoiceRows]" DisplayName="Build Data Table for invoice rows" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Description&quot; msdata:Caption=&quot;&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Quantity&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Unit&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;UnitPrice&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Vat_x0025_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;VatAmount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TotalRowAmount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InvoiceNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InvoicerowNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    </Sequence>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each PDF file in a directory" sap:VirtualizedContainerService.HintSize="934,5047" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[PDFfiles]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="Invoice" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do for each Invoice" sap:VirtualizedContainerService.HintSize="898,4921" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="PDFtext" />
              <Variable x:TypeArguments="x:String" Name="CompanyCode" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="CompanyCodeEnum" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign invoicename" sap:VirtualizedContainerService.HintSize="836,82" sap2010:WorkflowViewState.IdRef="Assign_18">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[InvoiceName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Invoice.Substring(12, 8)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text as PDFtext" FileName="[Invoice]" sap:VirtualizedContainerService.HintSize="836,60" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[PDFtext]" />
            <Sequence DisplayName="Extract Company code from text" sap:VirtualizedContainerService.HintSize="836,293" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Matches BuilderPattern="(?&lt;=Company Code: )(\d{7}-\d)" DisplayName="Extract CompanyCode from PDFtext" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[PDFtext]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=Company Code: )(\\d{7}-\\d)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=Company Code: )(\d{7}-\d)" RegexOption="IgnoreCase, Compiled" Result="[CompanyCodeEnum]" />
              <Assign DisplayName="Assign CompanyCode" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[CompanyCode]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[CompanyCodeEnum(0).toString]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <Switch x:TypeArguments="x:String" DisplayName="Switch between different company cases" Expression="[CompanyCode]" sap:VirtualizedContainerService.HintSize="836,4255" sap2010:WorkflowViewState.IdRef="Switch`1_2">
              <Sequence x:Key="1234567-8" sap2010:Annotation.AnnotationText="Extract data from PDFtext and save it in multiple variables, at the end save the data in DT_HeaderResult" DisplayName="Sequence for Service Provider Oy" sap:VirtualizedContainerService.HintSize="796,4047" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="InvoiceRows" />
                  <Variable x:TypeArguments="scg:List(x:String)" Name="InvoiceRow" />
                  <Variable x:TypeArguments="x:String" Name="TempQuantity" />
                  <Variable x:TypeArguments="x:String" Name="TempUnit" />
                  <Variable x:TypeArguments="x:String" Name="TempUnitPrice" />
                  <Variable x:TypeArguments="x:String" Name="TempVatPercent" />
                  <Variable x:TypeArguments="x:String" Name="TempVatAmount" />
                  <Variable x:TypeArguments="x:String" Name="TempTotalRowAmount" />
                  <Variable x:TypeArguments="x:String" Name="TempDescription" />
                  <Variable x:TypeArguments="x:String" Name="InvoiceDate" />
                  <Variable x:TypeArguments="x:String" Name="InvoiceNumber" />
                  <Variable x:TypeArguments="x:String" Name="ReferenceNumber" />
                  <Variable x:TypeArguments="x:String" Name="DueDate" />
                  <Variable x:TypeArguments="x:String" Name="BankAccountNumber" />
                  <Variable x:TypeArguments="x:String" Name="AmountExclVat" />
                  <Variable x:TypeArguments="x:String" Name="VATAmount" />
                  <Variable x:TypeArguments="x:String" Name="CompanyName" />
                  <Variable x:TypeArguments="x:String" Name="TotalAmount" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Sequence to extract InvoiceHeaderData" sap:VirtualizedContainerService.HintSize="734,1177" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign for CompanyName" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_26">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[CompanyName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Service Provider Oy</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for InvoiceNumber" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_20">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[InvoiceNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Laskun numero:") + 15),
		(
		PDFtext.IndexOf("Eräpäivä:") - (PDFtext.IndexOf("Laskun numero:") + 15)
		)
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for ReferenceNumber" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_21">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ReferenceNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Viitenumero:") + 13),
		(
		PDFtext.IndexOf("Ostajantie 1") - (PDFtext.IndexOf("Viitenumero:") + 13)
		)
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for InvoiceDate" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_19">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Päiväys:") + 9),
	10
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for DueDate" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[DueDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Eräpäivä:") + 10),
	10
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for BankAccountNumber" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_23">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[BankAccountNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("IBAN") + 5),
	22
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for AmountExclVat" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_24">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[AmountExclVat]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Amount excl. VAT") + 17),
	(
		 (PDFtext.IndexOf("€", (PDFtext.IndexOf("Amount excl. VAT")+ 17))) - (PDFtext.IndexOf("Amount excl. VAT") + 17) 
	)
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for VATAmount" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_28">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[VATAmount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.LastIndexOf("VAT") + 5),
	(
		 (PDFtext.IndexOf("€", (PDFtext.LastIndexOf("VAT")))) - (PDFtext.LastIndexOf("VAT") + 5) 
	)
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for TotalAmount" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_35">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[TotalAmount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.LastIndexOf("Total") + 6),
		 (PDFtext.LastIndexOf("€")- (PDFtext.LastIndexOf("Total") + 6))
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[New Object() {&#xD;&#xA;InvoiceNumber, &#xD;&#xA;CompanyName, &#xD;&#xA;ReferenceNumber, &#xD;&#xA;InvoiceDate, &#xD;&#xA;DueDate, &#xD;&#xA;CompanyCode, &#xD;&#xA;BankAccountNumber,&#xD;&#xA;AmountExclVat.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;), &#xD;&#xA;VATAmount.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;), &#xD;&#xA;TotalAmount.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;)&#xD;&#xA;}]" DataTable="[DT_HeaderResult]" DisplayName="Add Data Row to DT_HeaderResult" sap:VirtualizedContainerService.HintSize="734,186" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:AddDataRow>
                <Sequence DisplayName="Invoice rows" sap:VirtualizedContainerService.HintSize="734,2462" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign all InvoiceRows" sap:VirtualizedContainerService.HintSize="672,83" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[InvoiceRows]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Total") + 7),
	(PDFtext.IndexOf("Amount excl. VAT") - (PDFtext.IndexOf("Total") + 7))
)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign InvoiceRows in list by splitting" sap:VirtualizedContainerService.HintSize="672,82" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) (InvoiceRows.Split(Environment.NewLine))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign InvoicerowCounter for counting rows" sap:VirtualizedContainerService.HintSize="672,82" sap2010:WorkflowViewState.IdRef="Assign_76">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[InvoicerowCounter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Go through rows and save data to datatable" DisplayName="For Each row in InvoiceRow" sap:VirtualizedContainerService.HintSize="672,1984" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[InvoiceRow]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="For each row in InvoiceRow" sap:VirtualizedContainerService.HintSize="636,1827" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[row.Trim.Length &gt; 0]" DisplayName="If row not empty" sap:VirtualizedContainerService.HintSize="574,1716" sap2010:WorkflowViewState.IdRef="If_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap2010:Annotation.AnnotationText="Saves data for temporary variables and at the end, adds datarow to DT_InvoiceRows&#xA;" DisplayName="Sequence for saving data in variables" sap:VirtualizedContainerService.HintSize="496,1437" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="scg:List(x:String)" Name="SplittedRow" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign invoicerowcounter as plus 1" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_75">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[InvoicerowCounter]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[InvoicerowCounter +1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign row as splitted from delimeter as space" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_16">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:List(x:String)">[SplittedRow]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) (row.Split(" "))]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Description" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempDescription]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(SplittedRow(0) + " " + SplittedRow(1)).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Quantity" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_10">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempQuantity]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(2).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Unit" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_11">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempUnit]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(3).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign UnitPrice" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_12">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempUnitPrice]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(4).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign VatPercent" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_13">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempVatPercent]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(5).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign VatAmount" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_14">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempVatAmount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(6).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign total row amount" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_15">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempTotalRowAmount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(7).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[New Object() {&#xA;TempDescription, &#xA;TempQuantity, &#xA;TempUnit, &#xA;TempUnitPrice.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot;€&quot;, &quot;&quot;), &#xA;TempVatPercent.Replace(&quot;%&quot;, &quot;&quot;), &#xA;TempVatAmount.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot;€&quot;, &quot;&quot;), &#xA;TempTotalRowAmount.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot;€&quot;, &quot;&quot;),&#xA;InvoiceNumber,&#xA;InvoicerowCounter.ToString&#xA;}]" DataTable="[dt_InvoiceRows]" DisplayName="Add Data Row to DT_InvoiceRows" sap:VirtualizedContainerService.HintSize="434,186" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="DO NOTHING" sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </Sequence>
              <Sequence x:Key="1234567-9" sap2010:Annotation.AnnotationText="Extract data from PDFtext and save it in multiple variables, at the end save the data in DT_HeaderResult" DisplayName="Sequence for Component Oy" sap:VirtualizedContainerService.HintSize="796,4047" sap2010:WorkflowViewState.IdRef="Sequence_30">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="InvoiceRows" />
                  <Variable x:TypeArguments="scg:List(x:String)" Name="InvoiceRow" />
                  <Variable x:TypeArguments="x:String" Name="TempQuantity" />
                  <Variable x:TypeArguments="x:String" Name="TempUnit" />
                  <Variable x:TypeArguments="x:String" Name="TempUnitPrice" />
                  <Variable x:TypeArguments="x:String" Name="TempVatPercent" />
                  <Variable x:TypeArguments="x:String" Name="TempVatAmount" />
                  <Variable x:TypeArguments="x:String" Name="TempTotalRowAmount" />
                  <Variable x:TypeArguments="x:String" Name="TempDescription" />
                  <Variable x:TypeArguments="x:String" Name="InvoiceDate" />
                  <Variable x:TypeArguments="x:String" Name="InvoiceNumber" />
                  <Variable x:TypeArguments="x:String" Name="ReferenceNumber" />
                  <Variable x:TypeArguments="x:String" Name="DueDate" />
                  <Variable x:TypeArguments="x:String" Name="BankAccountNumber" />
                  <Variable x:TypeArguments="x:String" Name="AmountExclVat" />
                  <Variable x:TypeArguments="x:String" Name="VATAmount" />
                  <Variable x:TypeArguments="x:String" Name="CompanyName" />
                  <Variable x:TypeArguments="x:String" Name="TotalAmount" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Sequence to extract InvoiceHeaderData" sap:VirtualizedContainerService.HintSize="734,1179" sap2010:WorkflowViewState.IdRef="Sequence_25">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign for CompanyName" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_55">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[CompanyName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Component Oy</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for InvoiceNumber" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_56">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[InvoiceNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Invoicenumber:") + 15), 7
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for ReferenceNumber" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_67">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ReferenceNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Reference:") + 11), 8
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for InvoiceDate" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_68">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Date:") + 6), 10
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for DueDate" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_69">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[DueDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Duedate:") + 31), 10
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for BankAccountNumber" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_70">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[BankAccountNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("IBAN: ") + 6), 22
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for AmountExclVat" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_71">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[AmountExclVat]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Amount excl. VAT") + 47), 6 
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for VATAmount" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_72">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[VATAmount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.LastIndexOf("VAT") + 36) , 6
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign for TotalAmount" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_73">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[TotalAmount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.LastIndexOf("Total") + 38), 6 
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[New Object() {&#xA;InvoiceNumber, &#xA;CompanyName, &#xA;ReferenceNumber, &#xA;InvoiceDate, &#xA;DueDate, &#xA;CompanyCode, &#xA;BankAccountNumber,&#xA;AmountExclVat.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;), &#xA;VATAmount.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;), &#xA;TotalAmount.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;)&#xA;}]" DataTable="[DT_HeaderResult]" DisplayName="Add Data Row to DT_HeaderResult" sap:VirtualizedContainerService.HintSize="734,186" sap2010:WorkflowViewState.IdRef="AddDataRow_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:AddDataRow>
                <Sequence DisplayName="Invoice rows" sap:VirtualizedContainerService.HintSize="734,2462" sap2010:WorkflowViewState.IdRef="Sequence_29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign all InvoiceRows" sap:VirtualizedContainerService.HintSize="672,83" sap2010:WorkflowViewState.IdRef="Assign_57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[InvoiceRows]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[PDFtext.Substring(
	(PDFtext.IndexOf("Total") + 7),
	(PDFtext.IndexOf("Amount excl. VAT") - (PDFtext.IndexOf("Total") + 7))
)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign InvoiceRows in list" sap:VirtualizedContainerService.HintSize="672,82" sap2010:WorkflowViewState.IdRef="Assign_58">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">[InvoiceRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) (InvoiceRows.Split(Environment.NewLine))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign InvoicerowCounter" sap:VirtualizedContainerService.HintSize="672,82" sap2010:WorkflowViewState.IdRef="Assign_77">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[InvoicerowCounter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Go through rows and save data to datatable" DisplayName="For Each row in InvoiceRow" sap:VirtualizedContainerService.HintSize="672,1984" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[InvoiceRow]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="For each row in InvoiceRow" sap:VirtualizedContainerService.HintSize="636,1827" sap2010:WorkflowViewState.IdRef="Sequence_28">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[row.Length &gt; 0]" DisplayName="If row not empty" sap:VirtualizedContainerService.HintSize="574,1716" sap2010:WorkflowViewState.IdRef="If_5">
                            <If.Then>
                              <Sequence sap2010:Annotation.AnnotationText="Saves data for temporary variables and at the end, adds datarow to DT_InvoiceRows&#xA;" DisplayName="Sequence for saving data in variables" sap:VirtualizedContainerService.HintSize="496,1437" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="scg:List(x:String)" Name="SplittedRow" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign invoicerow counter plus 1" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_78">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[InvoicerowCounter]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[InvoicerowCounter + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign row as splitted from delimeter as space" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_59">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:List(x:String)">[SplittedRow]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) (row.Split(" "))]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Description" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_60">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempDescription]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(SplittedRow(0) + " " + SplittedRow(1)).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Quantity" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_61">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempQuantity]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(2).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign Unit" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_62">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempUnit]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(3).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign UnitPrice" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_63">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempUnitPrice]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(4).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign VatPercent" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_64">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempVatPercent]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(5).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign VatAmount" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_65">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempVatAmount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(6).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign total row amount" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_66">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TempTotalRowAmount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[SplittedRow(7).Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[New Object() {&#xA;TempDescription, &#xA;TempQuantity, &#xA;TempUnit, &#xA;TempUnitPrice.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot;€&quot;, &quot;&quot;), &#xA;TempVatPercent.Replace(&quot;%&quot;, &quot;&quot;), &#xA;TempVatAmount.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot;€&quot;, &quot;&quot;), &#xA;TempTotalRowAmount.Replace(&quot; &quot;, &quot;&quot;).Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot;€&quot;, &quot;&quot;),&#xA;InvoiceNumber,&#xA;InvoicerowCounter.ToString&#xA;}]" DataTable="[dt_InvoiceRows]" DisplayName="Add Data Row to DT_InvoiceRows" sap:VirtualizedContainerService.HintSize="434,186" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="DO NOTHING" sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </Sequence>
            </Switch>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:WriteCsvFile AddHeaders="True" DataTable="[dt_InvoiceRows]" Delimitator="Semicolon" DisplayName="Write InvoiceRows CSV file" FilePath="InvoicesCSV\InvoiceRowsData.csv" sap:VirtualizedContainerService.HintSize="934,154" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" ShouldQuote="False">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteCsvFile>
    <ui:WriteCsvFile AddHeaders="True" DataTable="[DT_HeaderResult]" Delimitator="Semicolon" DisplayName="Write InvoiceHeader CSV file" FilePath="InvoicesCSV\InvoiceHeaderData.csv" sap:VirtualizedContainerService.HintSize="934,154" sap2010:WorkflowViewState.IdRef="WriteCsvFile_2" ShouldQuote="False">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteCsvFile>
  </Sequence>
</Activity>